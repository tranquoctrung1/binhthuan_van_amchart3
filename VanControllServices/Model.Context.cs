//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace VanControllServices
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Objects;
    using System.Data.Objects.DataClasses;
    using System.Linq;
    
    public partial class binhthuanEntities : DbContext
    {
        public binhthuanEntities()
            : base("name=binhthuanEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public DbSet<t_TakeChangeHistory> t_TakeChangeHistory { get; set; }
        public DbSet<t_Valve_Status> t_Valve_Status { get; set; }
        public DbSet<t_Valve_Setting> t_Valve_Setting { get; set; }
    
        public virtual int p_Calculate_One_Site_Hourly_Output(string siteId, Nullable<System.DateTime> start, Nullable<System.DateTime> end)
        {
            var siteIdParameter = siteId != null ?
                new ObjectParameter("SiteId", siteId) :
                new ObjectParameter("SiteId", typeof(string));
    
            var startParameter = start.HasValue ?
                new ObjectParameter("Start", start) :
                new ObjectParameter("Start", typeof(System.DateTime));
    
            var endParameter = end.HasValue ?
                new ObjectParameter("End", end) :
                new ObjectParameter("End", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("p_Calculate_One_Site_Hourly_Output", siteIdParameter, startParameter, endParameter);
        }
    
        public virtual ObjectResult<p_Get_Data_ChannelID_Result> p_Get_Data_ChannelID(string channelid, Nullable<System.DateTime> start, Nullable<System.DateTime> end)
        {
            var channelidParameter = channelid != null ?
                new ObjectParameter("channelid", channelid) :
                new ObjectParameter("channelid", typeof(string));
    
            var startParameter = start.HasValue ?
                new ObjectParameter("start", start) :
                new ObjectParameter("start", typeof(System.DateTime));
    
            var endParameter = end.HasValue ?
                new ObjectParameter("end", end) :
                new ObjectParameter("end", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<p_Get_Data_ChannelID_Result>("p_Get_Data_ChannelID", channelidParameter, startParameter, endParameter);
        }
    
        public virtual ObjectResult<Nullable<System.DateTime>> p_Get_DateTime_Data_Exists(string channelid)
        {
            var channelidParameter = channelid != null ?
                new ObjectParameter("channelid", channelid) :
                new ObjectParameter("channelid", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<System.DateTime>>("p_Get_DateTime_Data_Exists", channelidParameter);
        }
    
        public virtual int p_GetDataCardSite(string channelID, Nullable<System.DateTime> start, Nullable<System.DateTime> end, string siteid)
        {
            var channelIDParameter = channelID != null ?
                new ObjectParameter("ChannelID", channelID) :
                new ObjectParameter("ChannelID", typeof(string));
    
            var startParameter = start.HasValue ?
                new ObjectParameter("start", start) :
                new ObjectParameter("start", typeof(System.DateTime));
    
            var endParameter = end.HasValue ?
                new ObjectParameter("end", end) :
                new ObjectParameter("end", typeof(System.DateTime));
    
            var siteidParameter = siteid != null ?
                new ObjectParameter("siteid", siteid) :
                new ObjectParameter("siteid", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("p_GetDataCardSite", channelIDParameter, startParameter, endParameter, siteidParameter);
        }
    }
}
